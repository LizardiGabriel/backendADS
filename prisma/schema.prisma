generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id_usuario               Int        @id @default(autoincrement())
  email_usuario            String     @unique
  password_usuario         String
  nombre_usuario           String
  apellido_paterno_usuario String
  apellido_materno_usuario String
  telefono_usuario         String
  rol_usuario              RolUsuario
  foto_usuario             String
  Reunion                  Reunion[]
}

enum RolUsuario {
  SuperAdmin
  Anfitrion
  Seguridad
}

model Sala {
  id_sala        Int         @id @default(autoincrement())
  nombre_sala    String
  capacidad_sala Int
  piso_sala      Int
  numero_sala    Int
  estatus_sala   EstatusSala
  Reunion        Reunion[]
}

enum EstatusSala {
  NoDisponible
  Disponible
}

model Reunion {
  id_reunion          Int    @id @default(autoincrement())
  id_usuario          Int
  id_sala             Int
  titulo_reunion      String
  descripcion_reunion String

  Repeticion Repeticion[]
  usuario    Usuario      @relation(fields: [id_usuario], references: [id_usuario], onDelete: Cascade)
  sala       Sala         @relation(fields: [id_sala], references: [id_sala], onDelete: Cascade)
  Invitacion Invitacion[]
  Acceso     Acceso[]
}

model Repeticion {
  id_repeticion Int @id @default(autoincrement())
  id_reunion    Int

  fecha_repeticion       String
  hora_inicio_repeticion String
  hora_fin_repeticion    String
  estatus_repeticion     String

  reunion Reunion @relation(fields: [id_reunion], references: [id_reunion], onDelete: Cascade)
}

model Invitado {
  id_invitado               Int    @id @default(autoincrement())
  nombre_invitado           String
  apellido_paterno_invitado String
  apellido_materno_invitado String
  email_invitado            String @unique
  password_invitado         String
  telefono_invitado         String
  empresa_invitado          String
  foto_invitado             String
  identificacion_invitado   String
  habilitado                Int

  Invitacion Invitacion[]
  Colado     Colado[]

  newCount        Int?
  changeFirstPass Int?
}

model Invitacion {
  id_invitacion Int        @id @default(autoincrement())
  id_reunion    Int
  id_invitado   Int
  qr_acceso     String
  habilitado    Habilitado

  numero_colados Int
  isConfirmed    Int

  es_colado_invitado Int?

  reunion                 Reunion                   @relation(fields: [id_reunion], references: [id_reunion], onDelete: Cascade)
  invitado                Invitado                  @relation(fields: [id_invitado], references: [id_invitado], onDelete: Cascade)
  Acceso                  Acceso[]
  dispositivo_electronico dispositivo_electronico[]
  Automovil               Automovil[]
  Colado                  Colado[]
}

enum Habilitado {
  Si
  No
}

model Acceso {
  id_acceso           Int    @id @default(autoincrement())
  id_invitacion       Int
  id_reunion          Int
  nota_acceso         String
  hora_entrada_acceso String
  hora_salida_acceso  String

  invitacion                     Invitacion                       @relation(fields: [id_invitacion], references: [id_invitacion], onDelete: Cascade)
  reunion                        Reunion                          @relation(fields: [id_reunion], references: [id_reunion], onDelete: Cascade)
  acceso_dispositivo_electronico acceso_dispositivo_electronico[]
  acceso_automovil               acceso_automovil[]
}

model dispositivo_electronico {
  id_dispositivo_electronico       Int    @id @default(autoincrement())
  id_invitacion                    Int
  no_serie_dispositivo_electronico String
  modelo_dispositivo_electronico   String
  marca_dispositivo_electronico    String

  invitacion                     Invitacion                       @relation(fields: [id_invitacion], references: [id_invitacion], onDelete: Cascade)
  acceso_dispositivo_electronico acceso_dispositivo_electronico[]
}

model Automovil {
  id_automovil        Int    @id @default(autoincrement())
  id_invitacion       Int
  color_automovil     String
  matricula_automovil String
  marca_automovil     String
  modelo_automovil    String

  invitacion       Invitacion         @relation(fields: [id_invitacion], references: [id_invitacion], onDelete: Cascade)
  acceso_automovil acceso_automovil[]
}

model Colado {
  id_colado     Int        @id @default(autoincrement())
  id_invitado   Int
  id_invitacion Int
  isConfirmed   Int
  invitado      Invitado   @relation(fields: [id_invitado], references: [id_invitado], onDelete: Cascade)
  Invitacion    Invitacion @relation(fields: [id_invitacion], references: [id_invitacion], onDelete: Cascade)
}


model acceso_dispositivo_electronico {
  id_acceso_dispositivo_electronico Int @id @default(autoincrement())
  id_acceso                         Int
  id_dispositivo_electronico        Int
  checka                            Int

  acceso                  Acceso                  @relation(fields: [id_acceso], references: [id_acceso], onDelete: Cascade)
  dispositivo_electronico dispositivo_electronico @relation(fields: [id_dispositivo_electronico], references: [id_dispositivo_electronico], onDelete: Cascade)
}

// tabla para acceso de automovil
model acceso_automovil {
  id_acceso_automovil Int @id @default(autoincrement())
  id_acceso           Int
  id_automovil        Int
  checka              Int

  acceso    Acceso    @relation(fields: [id_acceso], references: [id_acceso], onDelete: Cascade)
  Automovil Automovil @relation(fields: [id_automovil], references: [id_automovil], onDelete: Cascade)
}
